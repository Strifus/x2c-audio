// This file was generated by createLibraryStarter.sce on 06-01-2020 12:06

mprintf("+++ Loading X2C library Audio\n");
funcprot(0);
jimport("at.lcm.x2c.utils.Utils");
X2CRootDir = jinvoke(jinvoke(Utils, "getRootDirectory"), "toString");
X2CRootDir = strsubst(X2CRootDir, "\", "/");
curDir = strsubst(pwd(), "\", "/");
fs = filesep();

// load and add help chapter
if or(getscilabmode() == ["NW";"STD"]) then
    path_addchapter = pathconvert(curDir + "/jar");
    if isdir(path_addchapter) then
        add_help_chapter("X2C Audio Library", path_addchapter, %F);
    end
end

// load interface functions
exec("x2c_RectangleWav.sci", -1);
exec("x2c_TriangleWave.sci", -1);
exec("x2c_SineWave.sci", -1);

// load/create palette for library
if isfile("Audio.xpal")
    // palette already exists -> load saved palette
    xcosPalAdd("Audio.xpal", "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("Audio");
    allIconsAvailable = %t;
    
    // RectangleWave
    mprintf("Loading block RectangleWave...")
    o = x2c_RectangleWav("define");
    pal_icon = X2CRootDir + "Library" + fs + "Audio" + fs + "Doc" + fs + "Icons" + fs + "RectangleWave" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + strsubst(pwd(), "\", "/") + "/../Doc/Images/RectangleWave.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // SineWave
    mprintf("Loading block SineWave...")
    o = x2c_SineWave("define");
    pal_icon = X2CRootDir + "Library" + fs + "Audio" + fs + "Doc" + fs + "Icons" + fs + "SineWave" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + strsubst(pwd(), "\", "/") + "/../Doc/Images/SineWave.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // TriangleWave
    mprintf("Loading block TriangleWave...")
    o = x2c_TriangleWave("define");
    pal_icon = X2CRootDir + "Library" + fs + "Audio" + fs + "Doc" + fs + "Icons" + fs + "TriangleWave" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + strsubst(pwd(), "\", "/") + "/../Doc/Images/TriangleWave.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    if allIconsAvailable then
        // save palette
        xcosPalExport(pal, "Audio.xpal");
    end
    
end

// cleanup
clear("pal", "pal_icon", "style", "allIconsAvailable");
clear("path_addchapter", "curDir", "fs");
jremove("Utils", "LibraryUtils", "fs");

mprintf("---\n");
